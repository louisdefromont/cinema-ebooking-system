// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Movie {
  id           Int       @id @default(autoincrement())
  title        String    @db.VarChar(255)
  trailerUrl   String    @db.VarChar(255)
  thumbnailUrl String    @db.VarChar(255)
  releaseDate  DateTime  @db.DateTime
  Showing      Showing[]
}

model User {
  id          Int           @id @default(autoincrement())
  firstName   String?        @db.VarChar(255)
  lastName    String?        @db.VarChar(255)
  email       String?        @db.VarChar(255)
  password    String?        @db.VarChar(255)
  phone       String?        @db.VarChar(255)@default("a")
  street      String        @db.VarChar(255)@default("a")
  city        String        @db.VarChar(255)@default("a")
  state       String        @db.VarChar(255)@default("a")
  status      Boolean       @default(true)
  regPromo    Boolean       @default(false)
  paymentInfo PaymentCard[]
  bookings    BookingInfo[]
  Admin       Admin[]
  Customer    Customer[]
}

model PaymentCard {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [id], references: [id])
  cardNum        Int      @db.Int 
  billingAddress String   @db.VarChar(255)
  expirationDate DateTime @db.DateTime
}

model Admin {
  id   Int  @id @default(autoincrement())
  user User @relation(fields: [id], references: [id])
}

model Customer {
  id    Int             @id @default(autoincrement())
  user  User            @relation(fields: [id], references: [id])
  state CustomerState[]
}

model CustomerState {
  id       Int               @id @default(autoincrement())
  state    CustomerStateEnum
  customer Customer          @relation(fields: [id], references: [id])
}

enum CustomerStateEnum {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model Showing {
  id              Int       @id @default(autoincrement())
  dateTime        DateTime  @db.DateTime
  durationMinutes Int       @db.Int
  movie           Movie     @relation(fields: [id], references: [id])
  Showroom        Showroom? @relation(fields: [showroomId], references: [id])
  showroomId      Int?
}

model Showroom {
  id        Int       @id @default(autoincrement())
  seats     Int
  showings  Showing[]
  Theater   Theater?  @relation(fields: [theaterId], references: [id])
  theaterId Int?
}

model Theater {
  id        Int        @id @default(autoincrement())
  showrooms Showroom[]
}

model Promotion {
  id             Int    @id @default(autoincrement())
  expirationDate String
  discAmount     String
  regExpression  String
}

model BookingInfo {
  bookingNum    Int          @id @default(autoincrement())
  movieTitle    String
  showDate      String
  showTime      String
  creditCardNum Int
  promotion     String
  tickets       TicketType[]
  User          User?        @relation(fields: [userId], references: [id])
  userId        Int?
}

model TicketType {
  id                    Int            @id @default(autoincrement())
  ticket                TicketTypeEnum
  booking               BookingInfo    @relation(fields: [bookingInfoBookingNum], references: [bookingNum])
  bookingInfoBookingNum Int
}

enum TicketTypeEnum {
  ADULT
  CHILD
  SENIOR
}

model TicketPrices {
  id          Int   @id @default(autoincrement())
  adultPrice  Float
  childPrice  Float
  seniorPrice Float
}
